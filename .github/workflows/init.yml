name: Deploy infrastructure

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Set Azure Credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Set AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: terraform/
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform/
        run: terraform apply -auto-approve \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -var="client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
          -var="client_id=${{ secrets.AZURE_CLIENT_ID }}"

      - name: Get Terraform Outputs
        id: tf_outputs
        working-directory: terraform/
        run: |
          echo "aks_host=$(terraform output -raw aks_host)" >> $GITHUB_OUTPUT
          echo "aks_client_certificate=$(terraform output -raw aks_client_certificate)" >> $GITHUB_OUTPUT
          echo "aks_client_key=$(terraform output -raw aks_client_key)" >> $GITHUB_OUTPUT
          echo "aks_cluster_ca_certificate=$(terraform output -raw aks_cluster_ca_certificate)" >> $GITHUB_OUTPUT
